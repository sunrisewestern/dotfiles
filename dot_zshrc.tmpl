# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST
export ZSH="$HOME/.oh-my-zsh"
ZSH_DISABLE_COMPFIX="true"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="ys"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git 
	zsh-syntax-highlighting 
	zsh-autosuggestions 
	colorize 
	colored-man-pages
	autojump
	vi-mode
)

source $ZSH/oh-my-zsh.sh

# User configuration

VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true
VI_MODE_SET_CURSOR=true

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


################# my setting ####################


# alias
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias py="python3"
alias cutc='cut -d,'
alias awkc='awk -F ,'
alias awkt='awk -F "\t"'
alias gawkc='gawk -F ,'
alias sb='source ~/.zshrc'
alias vb='vim ~/.zshrc'
alias vc='vim ~/.ssh/config'
alias wl='wc -l'
alias cz='chezmoi'
alias sudocode='SUDO_EDITOR="$(which code) --wait" sudoedit'

if command -v lsd > /dev/null; then
    alias ls='lsd'
fi
alias ll='ls -lh'
alias la='ls -a'
alias lt='ls --tree'
alias lla='ls -lha'

function lec {
	perl -pe 's/((?<=,)|(?<=^)),/ ,/g;' "$@"|column -t -s,|less -F -S -K -N
}

function header {
	head -1 "$2"| awk -F "$1" 'NR==1{for(i=1;i<=NF;i++) print $i,i}END{}'
}

function ncol {
	awk -F "$1" 'NR==1{print NF}END{}' "$2"
}


export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD
#export LS_COLORS=export 
#zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

export PATH="$HOME/.local/bin:$PATH"

{{- if eq .chezmoi.os "linux" }}

{{- end }}

{{- if eq .chezmoi.os "darwin" }}
# env 
export JAVA_HOME=$(/usr/libexec/java_home)
export PATH="$HOME/opt/bin:$PATH"
export PATH="/Applications/Sublime Text.app/Contents/SharedSupport/bin:$PATH"
alias r="radian"
alias tailscale='/Applications/Tailscale.app/Contents/MacOS/Tailscale'

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh" || true

function ql {
  type=$(mdls -name kMDItemContentType $1 | sed -n 's/^kMDItemContentType = \"\(.*\)\"$/\1/p')
	echo $type
	plutil -insert CFBundleDocumentTypes.0.LSItemContentTypes.0 -string $type ~/Library/QuickLook/QLStephen.qlgenerator/Contents/Info.plist
	qlmanage -r
}

# Create x86 conda environment
create_x86_conda_environment () {
# example usage: create_x86_conda_environment myenv_x86 python=3.9
 CONDA_SUBDIR=osx-64 conda create -n $@
 conda activate $1
 conda config --env --set subdir osx-64
}
# Create ARM conda environment
create_ARM_conda_environment () {
# example usage: create_ARM_conda_environment myenv_x86 python=3.9
 CONDA_SUBDIR=osx-arm64 conda create -n $@
 conda activate $1
 conda config --env --set subdir osx-arm64
}

{{- end }}

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('{{ .chezmoi.homeDir }}/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "{{ .chezmoi.homeDir }}/anaconda3/etc/profile.d/conda.sh" ]; then
        . "{{ .chezmoi.homeDir }}/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="{{ .chezmoi.homeDir }}/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup

{{- if ne .chezmoi.os "darwin" }}
export PATH="{{ .chezmoi.homeDir }}/anaconda3/bin:$PATH"
{{- end }}

# <<< conda initialize <<<
